{"version":3,"sources":["assets/made-with-bulma.png","assets/avatar1.png","assets/avatar2.png","context/avatars.js","components/Speaker.jsx","components/InfoCard.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Niko","avatar1","Eason","avatar2","Speaker","name","title","subject","blockquote","description","className","data-aos","src","avatars","alt","style","whiteSpace","InfoCard","children","col","Title","Button","icon","text","url","href","target","rel","BackToTop","type","onClick","window","scrollTo","top","behavior","position","right","bottom","borderRadius","id","AOS","init","duration","once","App","useState","data","setData","isLoading","setIsLoading","sessionList","speechInfo","date","start","end","weekday","useEffect","a","fetch","response","json","fetchDate","then","document","querySelector","IntersectionObserver","entries","el","forEach","entry","isIntersecting","visibility","observe","map","i","key","toString","width","madeWithBulma","height","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d6862b3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/made-with-bulma.e0eab74d.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar1.fa6493a7.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar2.8aac022a.png\";","import avatar1 from '../assets/avatar1.png';\nimport avatar2 from '../assets/avatar2.png';\n\nexport default {\n  Niko: avatar1,\n  Eason: avatar2,\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport avatars from 'context/avatars';\r\n\r\nfunction Speaker({\r\n  name, title, subject, blockquote, description,\r\n}) {\r\n  return (\r\n    <div className=\"box\" data-aos=\"fade-up\">\r\n      <div className=\"columns\">\r\n        <div className=\"column\">\r\n          <div className=\"columns is-vcentered\">\r\n            <div className=\"column is-narrow\">\r\n              <figure className=\"image is-128x128 m-auto\">\r\n                <img className=\"is-rounded\" src={avatars[name]} alt=\"\" />\r\n              </figure>\r\n            </div>\r\n            <div className=\"column\">\r\n              <span className=\"is-size-4 has-text-weight-semibold\">{name}</span>\r\n              <span className=\"is-size-5\">{` / ${title}`}</span>\r\n              <div className=\"is-size-4 my-3 has-text-primary\">{subject}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"columns\">\r\n        <div className=\"column content is-desktop\" style={{ whiteSpace: 'break-spaces' }}>\r\n          <blockquote>{`${blockquote}`}</blockquote>\r\n          <p>{description}</p>\r\n        </div>\r\n      </div>\r\n      {/* <article className=\"media\">\r\n        <div className=\"media-left\">\r\n\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <div className=\"content\">\r\n            <span className=\"is-size-4 has-text-weight-semibold\">{name}</span>\r\n            <span className=\"is-size-5\">{` / ${title}`}</span>\r\n            <div className=\"is-size-4 my-3 has-text-primary\">{subject}</div>\r\n            <div>\r\n              {description.map(({ text, tag }) => {\r\n                const Tag = tag || 'p';\r\n                return <Tag key={text}>{text}</Tag>;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nSpeaker.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  subject: PropTypes.string.isRequired,\r\n  blockquote: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Speaker;\r\n","import React from 'react';\n\nfunction InfoCard({ title, children, col = 12 }) {\n  return (\n    <div className={`column is-${col}`} data-aos=\"fade-up\">\n      <div className=\"card\">\n        {title && (\n          <header className=\"card-header\">\n            <p className=\"card-header-title\">{title}</p>\n          </header>\n        )}\n        <div className=\"card-content\">\n          <div className=\"content\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoCard;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AOS from 'aos';\nimport madeWithBulma from 'assets/made-with-bulma.png';\nimport Speaker from './components/Speaker';\nimport InfoCard from './components/InfoCard';\nimport 'App.scss';\n\nAOS.init({\n  duration: 1000,\n  once: true,\n});\n\nfunction Title({ children }) {\n  return (\n    <h1 className=\"title has-text-centered\">\n      <span className=\"px-5 title-border\">{children}</span>\n    </h1>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]).isRequired,\n};\n\nfunction Button({ icon, text, url }) {\n  return (\n    <div className=\"column\">\n      <a className=\"is-fullwidth is-rounded button is-medium\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <i className={`${icon} mr-3 fa-lg`} />\n        {text}\n      </a>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  icon: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nfunction BackToTop() {\n  const scrollTop = () => { window.scrollTo({ top: 0, behavior: 'smooth' }); };\n  const buttonStyle = {\n    position: 'fixed', right: '1rem', bottom: '1rem', borderRadius: '50%',\n  };\n  return (\n    <button className=\"button is-link\" type=\"button\" onClick={scrollTop} style={buttonStyle} id=\"back-to-top\">\n      <span className=\"icon is-small\">\n        <i className=\"fas fa-arrow-up\" />\n      </span>\n    </button>\n  );\n}\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const { sessionList = [], speechInfo = [] } = data;\n  const [, date, start, end, weekday] = sessionList;\n\n  useEffect(() => {\n    async function fetchDate() {\n      const response = await fetch(\n        'https://script.google.com/macros/s/AKfycbxcB9OFz8aWg6aSU4FpuMju9FqxlQBK0LQXrp9RQ6rLVdb9uzEvfK1J/exec',\n      );\n      const json = await response.json();\n      return json;\n    }\n\n    fetchDate().then((json) => {\n      setData(json);\n      setIsLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    const toggleBackToTopButton = (entries) => {\n      const el = document.querySelector('#back-to-top');\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          //  只在目標元素進入 viewport 時執行這裡的工作\n          el.style.visibility = 'hidden';\n        } else {\n          // 只在目標元素離開 viewport 時執行這裡的工作\n          el.style.visibility = 'visible';\n        }\n      });\n    };\n    const title = document.querySelector('#hero-title');\n    const observer = new IntersectionObserver(toggleBackToTopButton, {});\n    observer.observe(title);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/* Hero title */}\n      <section className=\"hero is-bold has-text-centered banner\" id=\"hero-title\">\n        <div className=\"hero-body\">\n          <div className=\"py-5 border-box container\">\n            <div className=\"title is-size-1\">讀書分享會</div>\n            <div className=\"subtitle\">多一點時間，聆聽一本好書</div>\n          </div>\n        </div>\n      </section>\n      <section className=\"hero is-small is-primary is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              <Button icon=\"fas fa-user-plus\" text=\"報 名 場 次\" url=\"https://forms.gle/zEMm6eY1gTv8Tj3j6\" />\n              <Button icon=\"fas fa-microphone-alt\" text=\"想 當 講 者\" url=\"https://forms.gle/8Bx8H4bz7bMcmQYd7\" />\n              <Button icon=\"fas fa-book\" text=\"想 推 薦 書\" url=\"https://forms.gle/RJCALtMgCj1Bkr3v7\" />\n            </div>\n          </div>\n        </div>\n      </section>\n      {isLoading ? (\n        <div className=\"hero is-small\">\n          <div className=\"has-text-centered\">讀取資料...</div>\n          <div className=\"hero-body button is-loading is-large\" />\n        </div>\n      ) : (\n        <>\n          {/* Venue */}\n          <section className=\"section\">\n            <div className=\"container\">\n              <Title>基本資訊</Title>\n              <div className=\"columns\">\n                <InfoCard>\n                  <ul>\n                    <li>\n                      <span>{`時間：${date}`}</span>\n                      <span>{weekday && `(${weekday[1]}) ${start}-${end}`}</span>\n                    </li>\n                    <li>類型：線上讀書會</li>\n                    <li>\n                      工具：開場前半小時發送會議連結，聽眾自行登入\n                      <a href=\"https://meet.google.com/\"> Google Meet </a>\n                      。\n                    </li>\n                    <li>\n                      裝置：電腦請開啟\n                      <a href=\"https://meet.google.com/\">網頁版</a>\n                      ，手機則分別下載\n                      <a href=\"https://apps.apple.com/tw/app/google-meet/id1013231476\"> iOS </a>\n                      /\n                      <a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.meetings&hl=zh_TW\"> Android </a>\n                      app。（或是透過\n                      <a href=\"https://www.google.com/gmail/\"> Gmail </a>\n                      亦可）\n                    </li>\n                  </ul>\n                </InfoCard>\n              </div>\n            </div>\n          </section>\n          {/* Speaker */}\n          <section className=\"hero is-medium is-primary is-bold\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <Title>講者</Title>\n                <div className=\"columns is-desktop\">\n                  {speechInfo.map(([, name, title, subject, blockquote, description], i) => (\n                    <div className=\"column\" key={`speaker${i.toString()}`}>\n                      <Speaker\n                        name={name}\n                        title={title}\n                        subject={subject}\n                        blockquote={blockquote}\n                        description={description}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </section>\n          {/* Notice */}\n          <section className=\"section\">\n            <div className=\"container\">\n              <Title>注意事項</Title>\n              <div className=\"columns\">\n                <InfoCard title=\"參與中\" col={6}>\n                  <ul>\n                    <li>不發出其他聲響干擾演講者，如播音樂。</li>\n                    <li>\n                      中途離席\n                      <span className=\"tag is-warning is-light is-medium px-0\">不需</span>\n                      告知。\n                    </li>\n                  </ul>\n                </InfoCard>\n                <InfoCard title=\"參與後\" col={6}>\n                  <ul>\n                    <li>\n                      填寫\n                      <span className=\"tag is-warning is-light is-medium px-0\">回饋意見表單</span>\n                      ，感謝參與，連結將在結束後發送。\n                    </li>\n                    <li>想報名擔任講者請點上方按鈕報名。</li>\n                  </ul>\n                </InfoCard>\n              </div>\n            </div>\n          </section>\n          {/* Agenda */}\n          <section className=\"hero is-primary is-bold\">\n            <div className=\"hero-body\">\n              <div className=\"container\">\n                <Title>議程</Title>\n                <InfoCard>\n                  <table className=\"table\" style={{ width: '100%' }}>\n                    <thead>\n                      <tr>\n                        <th>時間</th>\n                        <th>活動</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>會議開始前 30 分鐘</td>\n                        <td>發送 Google Meet 會議代碼</td>\n                      </tr>\n                      <tr>\n                        <td>{start || '未定'}</td>\n                        <td>會議開始</td>\n                      </tr>\n                      <tr>\n                        <td>每位講者 20 分鐘</td>\n                        <td>好書分享</td>\n                      </tr>\n                      <tr>\n                        <td>每位講者 10 分鐘</td>\n                        <td>聽眾討論</td>\n                      </tr>\n                      <tr>\n                        <td>{end || '未定'}</td>\n                        <td>填寫回饋問卷，結束</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </InfoCard>\n              </div>\n            </div>\n          </section>\n        </>\n      )}\n      {/* Footer */}\n      <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n          <p>\n            Hand crafted by Niko\n            <span className=\"icon\">\n              <i className=\"fas fa-heart\" />\n            </span>\n          </p>\n          <p>\n            <a href=\"https://bulma.io\">\n              <img src={madeWithBulma} alt=\"Made with Bulma\" width=\"128\" height=\"24\" />\n            </a>\n          </p>\n        </div>\n      </footer>\n      <BackToTop />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}